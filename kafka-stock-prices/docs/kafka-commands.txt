bin\windows\zookeeper-server-start.bat config\zookeeper.properties
bin\windows\kafka-server-start.bat config\server.properties

bin\zookeeper-server-start.sh config\zookeeper.properties
bin\kafka-server-start.sh config\server.properties

kafka-topics.bat --list --bootstrap-server localhost:9093
kafka-topics.bat --create --bootstrap-server localhost:9093 --replication-factor 1 --partitions 1 --topic my-new-topic
kafka-topics.bat --create --bootstrap-server localhost:9093 --replication-factor 1 --partitions 1 --topic events
kafka-topics.bat --list --bootstrap-server localhost:9093
kafka-topics.bat --describe --bootstrap-server localhost:9093 --topic events
kafka-console-producer.bat --broker-list localhost:9093 --topic events
kafka-console-producer.bat --broker-list localhost:9093 --topic events â€“sync
kafka-console-consumer.bat --bootstrap-server localhost:9093 --topic events --from-beginning
kafka-topics.bat --describe --bootstrap-server localhost:9093 --topic temperature

copy config\server.properties config\server-1.properties
copy config\server.properties config\server-2.properties
config/server-1.properties:
    broker.id=1
    listeners=PLAINTEXT://:9093
    log.dirs=D:\\CourseKafka\\kafka_2.12-2.2.1\\kafka-logs-1
config/server-2.properties:
    broker.id=2
    listeners=PLAINTEXT://:9094
    log.dirs=D:\\CourseKafka\\kafka_2.12-2.2.1\\kafka-logs-2
bin\windows\kafka-server-start config\server-1.properties
bin\windows\kafka-server-start config\server-2.properties
kafka-topics --describe --bootstrap-server localhost:9092 --topic my-replicated-topic
wmic process where "caption = 'java.exe' and commandline like '%server-1.properties%'" get processid
taskkill /F /PID pid_number


connect-standalone config\connect-standalone.properties config\connect-file-source.properties config\connect-file-sink.properties
connect-standalone .\src\main\resources\connect-standalone.properties .\src\main\resources\connect-file-source.properties .\src\main \resources\connect-file-sink.properties

bin\windows\kafka-storage.bat format --config .\config\kraft\server.properties --cluster-id 1-wTPNMYQkinQ7KUbCZi9g
bin\windows\kafka-server-start.bat config\kraft\server.properties

on Linux/Mac:
./bin/kafka-storage format --config ./etc/kafka/kraft/server.properties --cluster-id $(./bin/kafka-storage random-uuid)
./bin/kafka-server-start ./etc/kafka/kraft/server.properties

# Docker compose
wsl --distribution docker-desktop-data
docker-compose -f examples\docker-compose.yml run kafka

#topics compaction
kafka-topics --create --bootstrap-server localhost:9093 --topic latest-product-price --replication-factor 1 --partitions 1 --config "cleanup.policy=compact" --config "delete.retention.ms=100"  --config "segment.ms=100" --config "min.cleanable.dirty.ratio=0.01" --config "min.compaction.lag.ms=100"
kafka-topics.bat --describe --bootstrap-server localhost:9093 --topic latest-product-price
kafka-console-producer --broker-list localhost:9093 --topic latest-product-price --property parse.key=true --property key.separator=:
>p3:10$
>p5:7$
>p3:11$
>p6:25$
>p6:12$
>p5:14$
>p5:17$
--config log.cleaner.min.compaction.lag.ms
kafka-console-consumer --bootstrap-server localhost:9093 --topic latest-product-price --property  print.key=true --property key.separator=: --from-beginning
p3:11$
p6:12$
p5:14$
p5:17$

cd /tmp/kraft-combined-logs/latest-product-price-0
cd /opt/kafka
./bin/kafka-run-class.sh kafka.tools.DumpLogSegments --deep-iteration --print-data-log --files /tmp/kraft-combined-logs/latest-product-price-0/00000000000000000000.log

